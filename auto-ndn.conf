; the general section contains all the general setting for the vehicle

general
{
  network /autondn/
  make /honda     ; pseudonym of make
  id /574G98627Y  ; permanent id of vehicle given by manufacturer
                  ; it will used to generate pseudonym
}


security
{
  validator
  {
    rule
    {
      id "Road Status Rule"
      for data
      filter
      {
        type name
        regex ^<autondn><road-status><>+
      }
      checker
      {
        type customized
        sig-type rsa-sha256
        key-locator
        {
          type name
          hyper-relation
          { ; <make-id><vehicle-id><KEY><ksk-123><ID-CERT>
            k-regex ^([^<KEY>]*)<KEY><ksk-.*><ID-CERT>$
            k-expand \\1 ; vehicle's key
            h-relation equal
            ; /autondn/road-status/<data-location>/V1.Vehicle/<make-id><vehicle-id><time-stamp>
            p-regex ^<autondn><road-status><>+<V1.Vehicle>(<><>)<>$
            p-expand \\1
          }
        }
      }
    }
    rule
    {
      id "Hierarchical Rule"
      for data
      filter
      {
        type name
        regex <><><KEY><ksk-.*><ID-CERT><>$
      }
      checker
      {
        type hierarchical
        sig-type rsa-sha256
      }
    }
    ;trust-anchor
    ;{
    ;  type file
    ;  file-name "autondn-root.cert"
    ;}

  rule
  {
	id "Hierarchical Exception rule"  ; wrote this rule for root certificate name, since it does not share any name component with make or vehicle name.
     for data
     filter
     {
      type name
      regex <><KEY><ksk-.*><ID-CERT><>$          ; name of the root certificate /aurondn-root/KEY/ksk-70808/ID-CERT
     }
     checker
     {
      type fixed-signer
      sig-type rsa-sha256
      signer
      {
    	type file
    	file-name "autondn-root.cert"
      }
     }
    }
  trust-anchor
  {
   type file
   file-name "autondn-root.cert"
  }
} ; validator


  cert-to-publish "autondn-root.cert"
  cert-to-publish "honda.cert"
  cert-to-publish "honda-vehicle.cert"
}
